//package
package monster;
import java.awt.image.BufferedImage;
//imports
import java.io.IOException;
import java.util.Random;
import javax.imageio.ImageIO;
import Main.GamePanel;
import Main.UtilityTool;
import entity.Entity;


public class MON_IceClops extends Entity {
	//GamePanel gp
	GamePanel gp;
	//public MON_IceClops constructor
	public MON_IceClops(GamePanel gp) {
		//this==this
		this.gp = gp;
		//call setDefaultValues method
		setDefaultValues();
		//call getMonsterImage method
		getMonsterImage();
		
	}//end public MON_IceClops constructor
	//public void setDefaulValues
		public void setDefaultValues() {
			//repeating code from GamePanel class
			x=100;
			y=100;
			speed=2;
			//default direction
			direction = "down";
			//Monster Status
			maxLife = 4;
			life = maxLife;
		}//end void
		//public void getMonsterImage
		public void getMonsterImage() {
			//setup the monster images
			up1=setup("IceClops_up_1");
			up2=setup("IceClops_up_2");
			down1=setup("IceClops_down_1");
			down2=setup("IceClops_down_2");
			left1=setup("IceClops_left_1");
			left2=setup("IceClops_left_2");
			right1=setup("IceClops_right_1");
			right2=setup("IceClops_right_2");
		}//end getMonsterImage
		//public void setAction
		public void setAction() {
			//actionLockCounter increment
			actionLockCounter++;
			//if actionLockCounter equals to 120
			if(actionLockCounter==120) {
				//Picks up number from 1 to 100
				Random random = new Random();
				int i = random.nextInt(100)+1;
				//if
				if(i<=25) {
					direction="up";
				}//if ended
				//if
				if(i>25&&i<=50) {
					direction="down";
				}//if ended
				//if
				if(i>50&&i<=100) {
					direction="left";
				}//if ended
				//if
				if(i>75&&i<=100) {
					direction="right";
				}//if ended
			}//end if
			//actionLockCounter =0
			actionLockCounter=0;
		}//end setAction method
		//BufferedImage setup method
		public BufferedImage setup(String imageName) {
			//instantiate utilityTool
			UtilityTool uTool = new UtilityTool();
			//image is equal to null
			BufferedImage image = null;
					//try
					try {
						//scale the player images
						image = ImageIO.read(getClass().getResourceAsStream("/player/"+imageName+".png"));
						image = uTool.scaleImage(image, gp.tileSize, gp.tileSize);
					}//end try
					//catch
					catch(IOException e) {
						e.printStackTrace();
					}//end catch
					//return image
					return image;
		}//end BufferedImage setup method
}//end public class MON_IceClops
